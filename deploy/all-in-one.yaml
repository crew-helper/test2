apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: atlasclusters.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasCluster
    listKind: AtlasClusterList
    plural: atlasclusters
    singular: atlascluster
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AtlasCluster is the Schema for the atlasclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasClusterSpec defines the desired state of AtlasCluster
            properties:
              foo:
                description: Foo is an example field of AtlasCluster. Edit AtlasCluster_types.go to remove/update
                type: string
            type: object
          status:
            description: AtlasClusterStatus defines the observed state of AtlasCluster
            properties:
              phase:
                description: 'The phase the current Custom Resource is in. Possible values: "Reconciling", "Pending", "Running", "Failed"'
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: atlasprojects.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasProject
    listKind: AtlasProjectList
    plural: atlasprojects
    singular: atlasproject
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: Name
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: AtlasProject is the Schema for the atlasprojects API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasProjectSpec defines the desired state of Project in Atlas
            properties:
              connectionSecretRef:
                description: ConnectionSecret is the name of the Kubernetes Secret which contains the information about the way to connect to Atlas (organization ID, API keys). The default Operator connection configuration will be used if not provided.
                properties:
                  name:
                    description: Name is the name of the Kubernetes Secret
                    type: string
                required:
                - name
                type: object
              name:
                description: Name is the name of the Project that is created in Atlas by the Operator if it doesn't exist yet.
                type: string
              projectIpAccessList:
                description: ProjectIPAccessList allows to enable the IP Access List for the Project. See more information at https://docs.atlas.mongodb.com/reference/api/ip-access-list/add-entries-to-access-list/
                items:
                  properties:
                    awsSecurityGroup:
                      description: Unique identifier of AWS security group in this access list entry.
                      type: string
                    cidrBlock:
                      description: Range of IP addresses in CIDR notation in this access list entry.
                      type: string
                    comment:
                      description: Comment associated with this access list entry.
                      type: string
                    deleteAfterDate:
                      description: Timestamp in ISO 8601 date and time format in UTC after which Atlas deletes the temporary access list entry.
                      type: string
                    ipAddress:
                      description: Entry using an IP address in this access list entry.
                      type: string
                  type: object
                type: array
            required:
            - name
            type: object
          status:
            description: AtlasProjectStatus defines the observed state of AtlasProject
            properties:
              id:
                description: The ID of the Atlas Project
                type: string
              phase:
                description: 'The phase the current Custom Resource is in. Possible values: "Reconciling", "Pending", "Running", "Failed"'
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: mongodb-atlas-kubernetes-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: atlasclusters.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasCluster
    listKind: AtlasClusterList
    plural: atlasclusters
    singular: atlascluster
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AtlasCluster is the Schema for the atlasclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasClusterSpec defines the desired state of AtlasCluster
            properties:
              foo:
                description: Foo is an example field of AtlasCluster. Edit AtlasCluster_types.go to remove/update
                type: string
            type: object
          status:
            description: AtlasClusterStatus defines the observed state of AtlasCluster
            properties:
              phase:
                description: 'The phase the current Custom Resource is in. Possible values: "Reconciling", "Pending", "Running", "Failed"'
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: atlasprojects.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasProject
    listKind: AtlasProjectList
    plural: atlasprojects
    singular: atlasproject
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: Name
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: AtlasProject is the Schema for the atlasprojects API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasProjectSpec defines the desired state of Project in Atlas
            properties:
              connectionSecretRef:
                description: ConnectionSecret is the name of the Kubernetes Secret which contains the information about the way to connect to Atlas (organization ID, API keys). The default Operator connection configuration will be used if not provided.
                properties:
                  name:
                    description: Name is the name of the Kubernetes Secret
                    type: string
                required:
                - name
                type: object
              name:
                description: Name is the name of the Project that is created in Atlas by the Operator if it doesn't exist yet.
                type: string
              projectIpAccessList:
                description: ProjectIPAccessList allows to enable the IP Access List for the Project. See more information at https://docs.atlas.mongodb.com/reference/api/ip-access-list/add-entries-to-access-list/
                items:
                  properties:
                    awsSecurityGroup:
                      description: Unique identifier of AWS security group in this access list entry.
                      type: string
                    cidrBlock:
                      description: Range of IP addresses in CIDR notation in this access list entry.
                      type: string
                    comment:
                      description: Comment associated with this access list entry.
                      type: string
                    deleteAfterDate:
                      description: Timestamp in ISO 8601 date and time format in UTC after which Atlas deletes the temporary access list entry.
                      type: string
                    ipAddress:
                      description: Entry using an IP address in this access list entry.
                      type: string
                  type: object
                type: array
            required:
            - name
            type: object
          status:
            description: AtlasProjectStatus defines the observed state of AtlasProject
            properties:
              id:
                description: The ID of the Atlas Project
                type: string
              phase:
                description: 'The phase the current Custom Resource is in. Possible values: "Reconciling", "Pending", "Running", "Failed"'
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mongodb-atlas-kubernetes-leader-election-role
  namespace: mongodb-atlas-kubernetes-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: mongodb-atlas-kubernetes-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasprojects
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasprojects/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mongodb-atlas-kubernetes-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mongodb-atlas-kubernetes-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mongodb-atlas-kubernetes-leader-election-rolebinding
  namespace: mongodb-atlas-kubernetes-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mongodb-atlas-kubernetes-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: mongodb-atlas-kubernetes-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mongodb-atlas-kubernetes-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mongodb-atlas-kubernetes-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: mongodb-atlas-kubernetes-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mongodb-atlas-kubernetes-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mongodb-atlas-kubernetes-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: mongodb-atlas-kubernetes-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: mongodb-atlas-kubernetes-controller-manager-metrics-service
  namespace: mongodb-atlas-kubernetes-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: mongodb-atlas-kubernetes-controller-manager
  namespace: mongodb-atlas-kubernetes-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: /:0.0.3
        imagePullPolicy: Always
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
