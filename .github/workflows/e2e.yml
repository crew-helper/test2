name: E2E test

on:
  push:

jobs:
  prepare-e2e:
    name: Prepare E2E configuration and image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2.3.1

    - name: Prepare tag
      id: prepare
      uses: ./.github/actions/set-tag

    - name: Push Atlas Operator to Registry
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ secrets.DOCKER_REPO }}
        registry: ${{ secrets.DOCKER_REGISTRY }}
        tags: ${{ steps.prepare.outputs.tag }}

    - name: Generate configuration for the tests
      uses: ./.github/actions/gen-install-scripts
      with:
        # IMAGE_URL: leori/test:e2e-a8e69ed
        IMAGE_URL: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPO }}:${{ steps.prepare.outputs.tag }}

  e2e:
    name: E2E tests
    needs: prepare-e2e
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # k8s: ["1.17-kind", "1.17-aws", "1.17-opeshift"] # <version>-<platform>
        k8s: ["1.17-kind"] # <version>-<platform>
        test: ["Deploy simple cluster"] # TODO refactor
    steps:

    - name: Check out code
      uses: actions/checkout@v2.3.1

    - name: Prepare tag
      id: prepare
      uses: ./.github/actions/set-tag

    - name: Set properties
      id: properties
      run: |
        # version=$(echo $INPUT_K8S | awk -F "-" '{print $1}')
        version=$(echo ${{ matrix.k8s }} | awk -F "-" '{print $1}')
        platform=$(echo $INPUT_K8S | awk -F "-" '{print $2}')
        echo "::set-output name=k8s_version::$version"
        echo "::set-output name=k8s_platform::$platform"
      with:
        K8S: ${{ matrix.k8s }}

    # run if platform = kind #TODO
    - name: Create k8s Kind Cluster
      if: ${{ steps.properties.outputs.k8s_platform == 'kind' && !env.ACT }}
      uses: helm/kind-action@v1.1.0
      with:
        version: ${{ steps.properties.outputs.k8s_version }}
        cluster_name: ${{ matrix.k8s }}

    - name: Run e2e test
      run: |
        #TODO remove -v?
        kubectl version
        ginkgo -v ./test/e2e -x -focus "$INPUT_TEST"
      with:
        test: ${{ matrix.test }}
